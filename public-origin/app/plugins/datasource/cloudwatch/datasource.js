/*! grafana - v2.6.0 - 2015-12-14
 * Copyright (c) 2015 Torkel Ã–degaard; Licensed Apache-2.0 */

define(["angular","lodash","moment","./query_ctrl","./directives"],function(a,b){"use strict";var c=a.module("grafana.services");c.factory("CloudWatchDatasource",["$q","backendSrv","templateSrv",function(c,d,e){function f(a){this.type="cloudwatch",this.name=a.name,this.supportMetrics=!0,this.proxyUrl=a.url,this.defaultRegion=a.jsonData.defaultRegion}function g(a,c){var d=/\{\{(.+?)\}\}/g,f=c.alias||"{{metric}}_{{stat}}",g={region:e.replace(c.region),namespace:e.replace(c.namespace),metric:e.replace(c.metricName)};b.extend(g,c.dimensions);var h=1e3*c.period;return b.map(c.statistics,function(c){var e=[],i=null;b.chain(a.Datapoints).sortBy(function(a){return a.Timestamp}).each(function(a){var b=new Date(a.Timestamp).getTime();i&&b-i>h&&e.push([null,i+h]),i=b,e.push([a[c],b])}),g.stat=c;var j=f.replace(d,function(a,b){return g[b]?g[b]:b});return{target:j,datapoints:e}})}function h(a){return Math.round(a.valueOf()/1e3)}function i(a,c){return b.map(a,function(a,b){return{Name:e.replace(b,c),Value:e.replace(a,c)}})}return f.prototype.query=function(d){var f=h(d.range.from),j=h(d.range.to),k=[];if(d=a.copy(d),b.each(d.targets,b.bind(function(a){if(!a.hide&&a.namespace&&a.metricName&&!b.isEmpty(a.statistics)){var c={};c.region=e.replace(a.region,d.scopedVars),c.namespace=e.replace(a.namespace,d.scopedVars),c.metricName=e.replace(a.metricName,d.scopedVars),c.dimensions=i(a.dimensions,d.scopedVars),c.statistics=a.statistics;var g=j-f;c.period=parseInt(a.period,10)||("AWS/EC2"===c.namespace?300:60),g/c.period>=1440&&(c.period=60*Math.ceil(g/1440/60)),a.period=c.period,k.push(c)}},this)),b.isEmpty(k)){var l=c.defer();return l.resolve({data:[]}),l.promise}var m=b.map(k,function(a){return this.performTimeSeriesQuery(a,f,j)},this);return c.all(m).then(function(a){var c=[];return b.each(a,function(a,b){var e=g(a,d.targets[b]);c=c.concat(e)}),{data:c}})},f.prototype.performTimeSeriesQuery=function(a,b,c){return this.awsRequest({region:a.region,action:"GetMetricStatistics",parameters:{namespace:a.namespace,metricName:a.metricName,dimensions:a.dimensions,statistics:a.statistics,startTime:b,endTime:c,period:a.period}})},f.prototype.getRegions=function(){return this.awsRequest({action:"__GetRegions"})},f.prototype.getNamespaces=function(){return this.awsRequest({action:"__GetNamespaces"})},f.prototype.getMetrics=function(a){return this.awsRequest({action:"__GetMetrics",parameters:{namespace:e.replace(a)}})},f.prototype.getDimensionKeys=function(a){return this.awsRequest({action:"__GetDimensions",parameters:{namespace:e.replace(a)}})},f.prototype.getDimensionValues=function(a,c,d,f,g){var h={region:e.replace(a),action:"ListMetrics",parameters:{namespace:e.replace(c),metricName:e.replace(d),dimensions:i(g,{})}};return this.awsRequest(h).then(function(a){return b.chain(a.Metrics).pluck("Dimensions").flatten().filter(function(a){return null!==a&&a.Name===f}).pluck("Value").uniq().sortBy().map(function(a){return{value:a,text:a}}).value()})},f.prototype.performEC2DescribeInstances=function(a,b,c){return this.awsRequest({region:a,action:"DescribeInstances",parameters:{filter:b,instanceIds:c}})},f.prototype.metricFindQuery=function(a){var d,f,g,h=function(a){return b.map(a,function(a){return{text:a}})},i=a.match(/^regions\(\)/);if(i)return this.getRegions();var j=a.match(/^namespaces\(\)/);if(j)return this.getNamespaces();var k=a.match(/^metrics\(([^\)]+?)\)/);if(k)return this.getMetrics(k[1]);var l=a.match(/^dimension_keys\(([^\)]+?)\)/);if(l)return this.getDimensionKeys(l[1]);var m=a.match(/^dimension_values\(([^,]+?),\s?([^,]+?),\s?([^,]+?),\s?([^,]+?)\)/);if(m){d=e.replace(m[1]),f=e.replace(m[2]),g=e.replace(m[3]);var n=e.replace(m[4]);return this.getDimensionValues(d,f,g,n,{})}var o=a.match(/^ebs_volume_ids\(([^,]+?),\s?([^,]+?)\)/);if(o){d=e.replace(o[1]);var p=e.replace(o[2]),q=[p];return this.performEC2DescribeInstances(d,[],q).then(function(a){var c=b.map(a.Reservations[0].Instances[0].BlockDeviceMappings,function(a){return a.Ebs.VolumeId});return h(c)})}return c.when([])},f.prototype.testDatasource=function(){var a=this.defaultRegion,b="AWS/Billing",c="EstimatedCharges",d={};return this.getDimensionValues(a,b,c,"ServiceName",d).then(function(){return{status:"success",message:"Data source is working",title:"Success"}})},f.prototype.awsRequest=function(a){var b={method:"POST",url:this.proxyUrl,data:a};return d.datasourceRequest(b).then(function(a){return a.data})},f.prototype.getDefaultRegion=function(){return this.defaultRegion},f}])});